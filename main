#include <Servo.h>
#include <LiquidCrystal.h>


// with the arduino pin number it is connected to
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);


// Define servo motors
Servo servoX;  // Controls left-right movement
Servo servoY;  // Controls up-down movement

// Define LDR pins
const int LDR_TL = A0;  // Top Left
const int LDR_TR = A1;  // Top Right
const int LDR_BL = A2;  // Bottom Left
const int LDR_BR = A3;  // Bottom Right
const int V_read = A5;
const float referenceVoltage = 5.0; // Default reference voltage for most Arduinos
const float targetVoltageMax = 6.0;

// Define servo pins
const int servoXPin = 9;  
const int servoYPin = 6;  

// Initial servo positions
int posX = 90;  
int posY = 90;  

void setup() {
    servoX.attach(servoXPin);
    servoY.attach(servoYPin);
    
    servoX.write(posX);
    servoY.write(posY);
    
    pinMode(LDR_TL, INPUT);
    pinMode(LDR_TR, INPUT);
    pinMode(LDR_BL, INPUT);
    pinMode(LDR_BR, INPUT);
    pinMode(V_read, INPUT);

    lcd.begin(16, 2);
  
    lcd.print("Voltage : ");
    lcd.setCursor(0, 1);
    lcd.print("Solar Tracker");

    Serial.begin(9600);
}

void loop() {
    int tl = analogRead(LDR_TL);
    int tr = analogRead(LDR_TR);
    int bl = analogRead(LDR_BL);
    int br = analogRead(LDR_BR);

    // Average readings
    int top = (tl + tr) / 2;
    int bottom = (bl + br) / 2;
    int left = (tl + bl) / 2;
    int right = (tr + br) / 2;

    int threshold = 10;  // Adjust threshold for sensitivity

    // Adjust X-axis (left-right)
    if (abs(left - right) > threshold) {
        if (left > right) posX -= 1;  // Move left
        else posX += 1;  // Move right
    }

    // Adjust Y-axis (up-down)
    if (abs(top - bottom) > threshold) {
        if (top > bottom) posY -= 1;  // Move up
        else posY += 1;  // Move down
    }

    // Constrain positions
    posX = constrain(posX, 0, 180);
    posY = constrain(posY, 30, 150);

    // Move servos
    servoX.write(posX);
    servoY.write(posY);

    // Debugging output
    Serial.print("TL: "); Serial.print(tl);
    Serial.print(" TR: "); Serial.print(tr);
    Serial.print(" BL: "); Serial.print(bl);
    Serial.print(" BR: "); Serial.print(br);
    Serial.print(" | X: "); Serial.print(posX);
    Serial.print(" Y: "); Serial.println(posY);

    int analogValue = analogRead(V_read); // Read analog value (0-1023)
    float voltage = (analogValue * referenceVoltage / 1023.0); // Convert to actual voltage (0-5V)
    float scaledVoltage = (voltage * targetVoltageMax / referenceVoltage);
    
    Serial.print("voltage"); Serial.println(scaledVoltage);
    //lcd.setCursor(10, 0)
    //lcd.print("11");
    //lcd.print("Voltage : ");
    lcd.setCursor(10, 0);
    lcd.print(scaledVoltage);
    lcd.setCursor(15,0);
    lcd.print("V");
    

    delay(5);  // Adjust speed
}
